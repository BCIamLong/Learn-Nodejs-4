extends base
//- ! code mixin in other file then include it to use(useful in case we have many code, mixins)
include mixins/_mixinsTour

//- * we only want include mapbox library in tour page because we only want it display in here
//- block script 
//-   script(src="/js/mapbox.js" defer) 

//- ! but we have other way to do it that create block head and add script in the end of this block by use block append, if we want to add in the start of this block we can use block prepend
block append head 
  script(src="https://cdn.maptiler.com/maptiler-sdk-js/v1.1.1/maptiler-sdk.umd.min.js")
  link(href="https://cdn.maptiler.com/maptiler-sdk-js/v1.1.1/maptiler-sdk.css" rel="stylesheet")
  //- * we should put this stripe library to base for all the page because we use parcel and parcel is put all the code in one file and when we go to any page this code will run and of course it will contain the stripe code and need to required this library
  //- * if we only put it in here all pages will get error except this one
  //- script(src="https://js.stripe.com/v3/")
  //- ! Stripe link will add the stripe object to global scope in browser and we can use that in front-end js
  //- ! if we don't have defer so the script will load before the page finish loaded so we might lost some element need to manipulate in JS file in client and it'll lead some errors
  //- * so to solve that we need to put defer if we put this script in head, if we put it in end of body then it's not problem

block title 
  title Natours | #{tour.name} Tour

block content
  section.section-header
    if bookmarked
      button.btn--bookmark.btn--green(data-bookmark=`${bookmarked}`) 
        svg.heading-box__icon
          use(xlink:href=`/img/icons.svg#icon-bookmark`)
    else 
      button.btn--bookmark 
        svg.heading-box__icon
          use(xlink:href=`/img/icons.svg#icon-bookmark`)
    .header__hero
      .header__hero-overlay &nbsp;
        img.header__hero-img(src=`/img/tours/${tour.imageCover}`, alt=`${tour.name}`)

    .heading-box
      h1.heading-primary
        span= tour.name
      a(href=`#`)
      .heading-box__group
        .heading-box__detail
          svg.heading-box__icon
            use(xlink:href='/img/icons.svg#icon-clock')
          span.heading-box__text #{tour.duration} days
        .heading-box__detail
          svg.heading-box__icon
            use(xlink:href='/img/icons.svg#icon-map-pin')
          span.heading-box__text= tour.startLocation.description
  section.section-description
    .overview-box
      div
        .overview-box__group
          h2.heading-secondary.ma-bt-lg Quick facts
          //- * in here we can see the code of .overview-box__detail is repeat many times right but it's different data 
          //-  * however we can also use mixins feature of pug to basically reuseable piece of code that we can pass arguments into, so bit like a function and also it exactly like mixins in SAS(CSS pre processor)
          //- .overview-box__detail
          //-   svg.overview-box__icon
          //-     use(xlink:href='/img/icons.svg#icon-calendar')
          //-   span.overview-box__label Next date
          //-   span.overview-box__text= tour.startDates[0].toLocaleString("en-US", { month: "long", year: "numeric"})
          //- .overview-box__detail
          //-   svg.overview-box__icon
          //-     use(xlink:href='/img/icons.svg#icon-trending-up')
          //-   span.overview-box__label Difficulty
          //-   span.overview-box__text tour.difficulty
          //- .overview-box__detail
          //-   svg.overview-box__icon
          //-     use(xlink:href='/img/icons.svg#icon-user')
          //-   span.overview-box__label Participants
          //-   span.overview-box__text #{tour.maxGroupSize} people
          //- .overview-box__detail
          //-   svg.overview-box__icon
          //-     use(xlink:href='/img/icons.svg#icon-star')
          //-   span.overview-box__label Rating
          //-   span.overview-box__text #{tour.ratingsAverage} / #{tour.ratingsQuantity}
          //- ! to use mixin we use + notation and () like function and pass required route
          - const nextDate = tour.startDates[0].date.toLocaleString("en-US", { month: "long", year: "numeric"})
          +overviewBox("Next date",nextDate,"calendar")
          +overviewBox("Difficulty",tour.difficulty,"trending-up")
          +overviewBox("Participants",tour.maxGroupSize,"user")
          +overviewBox("Rating",`${tour.ratingsAverage} / 5`,"star")

        .overview-box__group
          h2.heading-secondary.ma-bt-lg Your tour guides
          each guide in tour.guides
            .overview-box__detail
              img.overview-box__img(src=`/img/users/${guide.photo}`, alt=`${guide.role}`)
              //- * pug support conditional like if/else: but it's very simple we even don't check equality between values
              //- * however we can use Javascript to do it
              //- !notice that - notation is for unbuffered code which don't have output 
              - const role = guide.role === "guide" ? "Tour guide" : "Lead guide"
              //- * we can also mixing the pug code and JS code like these code bellow
              - if(guide.role === "guide")
                span.overview-box__label Tour Guide
              - else 
                span.overview-box__label Lead Guide
              span.overview-box__text= guide.name

    .description-box
      h2.heading-secondary.ma-bt-lg About #{tour.name} tour
      - const descriptions = tour.description.split("\n") //- \n is stand for new line
      each des in descriptions
        p.description__text= des
      //- p.description__text= description[1]
  section.section-pictures
    //- -let i = 1;
    //- * in pug we can use loop each val, index in array to use index we don't need to create i and set   i++
    each img, index in tour.images
      .picture-box
        //- * so now we want picture-box__img--1 change to 2, 3... and how can we do that? we can't use the syntax right
        //- * well we will put it like a class in attributes(class=``) and then use literal syntax JS ok
        //- img.picture-box__img.picture-box__img--1(src=`/img/tours/${img}`, alt=`${tour.name} ${index+1}`)
        img.picture-box__img(src=`/img/tours/${img}`, alt=`${tour.name} ${index+1}`, class=`picture-box__img--${index+1}`)
      //- - i++

  section.section-map
    //- * we can put the data into data-locations attribute then in JS file client we can get this value 
    //- ! remember that we need convert this to string but we also need to convert it to the original type is array(objects) so use JSON.stringify to convert it to string is good
    //- * and we will use JSON.parse() to parse to array(objects)
    #map(data-locations=`${JSON.stringify(tour.locations)}`)

  section.section-reviews(data-tour-id=`${tour.id}`)
    .reviews
      //- - const sevenDay = 7 * 24 * 60 * 60 * 1000
      //- - const check = tour.startDates[0]
      if booked
        +reviewsCard(user.name, user.photo, '', '', 0, 'form')
      each review in tour.reviews
        //- * Because this code here too long and so we can create mixin to do the code easy to maintain
        +reviewsCard(review.user.name, review.user.photo, review.review, review.createdAt, review.rating)
        //- .reviews__card
        //-   .reviews__avatar
        //-     img.reviews__avatar-img(src=`/img/users/${review.user.photo}`, alt=`${review.user.name}`)
        //-     h6.reviews__user= review.user.name
        //-   p.reviews__text= review.review
        //-   .reviews__rating
        //-     //- - const arr = []
        //-     //- - for(let i=1;i<= review.rating;i++) arr.push(i)
        //-     //- each num in arr
        //-     //- * we also can mixing the pug code and JS for loop code
        //-     - for(let i = 1; i <= review.rating; i++)
        //-       svg.reviews__star.reviews__star--active
        //-         use(xlink:href='/img/icons.svg#icon-star')
        //-     - let check = 5 - review.rating
        //-     //- - console.log((5 - arr.length))
        //-     - let c = 0;
        //-     //- * pug support while loop(but we also can use JS for loop here)
        //-     while c >= 0 && c < check
        //-       svg.reviews__star.reviews__star--inactive
        //-         use(xlink:href='/img/icons.svg#icon-star')
        //-       - c++

  section.section-cta
    .cta
      .cta__img.cta__img--logo
        img(src='/img/logo-white.png', alt='Natours logo')
      - let a = 1;
      each img in tour.images
        #a 
          if a === 1
            img.cta__img.cta__img--1(src=`/img/tours/${img}`, alt=`${tour.name} ${a}`)
          else if a === 2
            img.cta__img.cta__img--2(src=`/img/tours/${img}`, alt=`${tour.name} ${a}`)
          - a++

      .cta__content
        h2.heading-secondary What are you waiting for?
        p.cta__text #{tour.duration} days. 1 adventure. Infinite memories. Make it yours today!
        if user
          //- ? why do we need tour id?
          //- * well that because the checkout router need :tourId right therefore we need to put it in here and then in JS front-end we can easy to get it
          if booked
            a.btn.btn--green.span-all-rows(href="/") Tour booked, You can watch other tours!
          else 
            button.btn.btn--green.span-all-rows#book-tour(data-tour-id=`${tour.id}`) Book tour now!
        else 
          a.btn.btn--green.span-all-rows(href="/login") Login to book tour!